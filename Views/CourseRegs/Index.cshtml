@*@model IEnumerable<WFPtest.Models.CourseReg>*@

@{
    ViewBag.Title = "Index";
}
@model PagedList.IPagedList<WFPtest.Models.CourseReg>




@*@model IEnumerable<WFPtest.Models.staff>*@
@*@using IEnumerable<wfptest.models.staff>;*@
@using WFPtest.Models


@using PagedList.Mvc;
@using JQueryUIHelpers;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}
<br>
<h2>Registration List</h2>



@*@using (Html.BeginForm())
    {
        <p>
            Find by name: @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
        </p>
    }*@

@using (Html.BeginForm("Index", "CourseRegs", FormMethod.Get))
{


    <br>
    <p>
        Find by Course Name Or E-mail: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />&nbsp;&nbsp;@Html.ActionLink("Reset Filter", "Index")
    </p>
}



<table class="table">
    <tr>
        <th>
            @Html.DisplayName("LMS Prerequisite")
        </th>
        <th>
            @Html.DisplayName("Supervisor Approval")
        </th>
        <th>
            @Html.DisplayName("Course Name")
        </th>
        <th>
            @Html.DisplayName("Course Duration")
        </th>
        <th>
            @Html.DisplayName("First Name")
        </th>
        <th>
            @Html.DisplayName("Last Name")
        </th>
        <th>
            @Html.DisplayName("Staff e-mail")
        </th>
        <th>
            @Html.DisplayName("Staff Unit")
        </th>
        <th>
            @Html.DisplayName("Staff Title")
        </th>
        <th>
            @Html.DisplayName("index Number")
        </th>
        <th>
            @Html.DisplayName("Start Date")
        </th>
        <th>
            @Html.DisplayName("End Date")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
           
            @Html.DisplayFor(modelItem => item.LMSPre)
            @*@Html.RadioButtonFor(modelItem => item.LMSPre, "true",true) ? string.Empty 
            Yes
            <p>
            @Html.RadioButtonFor(modelItem => item.LMSPre, "false", false)
                No*@

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SupervisorApprove )
            @*@Html.RadioButtonFor(modelItem => item.SupervisorApprove, "true", new { disabled = "disabled" })
            Yes
            <p>
            @Html.RadioButtonFor(modelItem => item.SupervisorApprove, "false", new { disabled = "disabled" })
                No*@
               
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cours.CourseName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseSession.CourseDuration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.staff.staff_first_name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.staff.staff_last_name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.staff.staff_email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.staff .unit.unit_description_english )
        </td>  
        <td>
            @Html.DisplayFor(modelItem => item.staff.functional_title.functional_title_description_english )
        </td>  
        <td>
            @Html.DisplayFor(modelItem => item.staff.staff_id )
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.CourseSession.CourseStartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CourseSession.CourseEndDate )
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.RegID }) |
            @Html.ActionLink("Details", "Details", new { id=item.RegID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.RegID })
        </td>
    </tr>
}

</table>
<table border="0">
    <tr>
        <td>
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </td>
    </tr>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))