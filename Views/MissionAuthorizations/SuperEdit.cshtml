@if (!Request.IsAuthenticated)
{
    Response.Redirect("/RBC-SMS/account/login");
}


@model WFPtest.Models.MissionAuthorization

@{
    ViewBag.Title = "Super Edit";
}

@*<h2>Edit</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class=" form-create ">

        <style type="text/css">

             .form-create {
            background: -webkit-gradient(linear, bottom, left 175px, from(#CCCCCC), to(#EEEEEE));
            background: -moz-linear-gradient(bottom, #CCCCCC, #EEEEEE 175px);
            margin: auto;
            position: relative;
            width: 1000px;
            height: 700px;
            font-family: Tahoma, Geneva, sans-serif;
            font-size: 14px;
            font-style: italic;
            line-height: 24px;
            font-weight: bold;
            color: #09C;
            text-decoration: none;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            border-radius: 10px;
            padding: 10px;
            border: 1px solid #999;
            border: inset 1px solid #333;
            -webkit-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3);
            -moz-box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3);
            box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3);
        }

            .ui-datepicker {
                background: #fff; /* Old browsers */
                background: #fff -moz-linear-gradient(top, #fcfcfc 0%, #fff 100%); /* FF3.6+ */
                background: #fff -webkit-gradient(linear, left top, left bottom, color-stop(0%,#fcfcfc)), color-stop(100%,#fff)); /* Chrome,Safari4+ */
                background: #fff -webkit-linear-gradient(top, #fcfcfc 0%, #fff 100%); /* Chrome10+,Safari5.1+ */
                background: #fff -o-linear-gradient(top, #fcfcfc 0%, #fff 100%); /* Opera11.10+ */
                background: #fff -ms-linear-gradient(top, #fcfcfc 0%, #fff 100%); /* IE10+ */
                background: #fff linear-gradient(top, #fcfcfc 0%, #fff 100%); /* W3C */
                font-size: 11px;
                padding: 10px;
                border: 1px solid #ccc;
            }

                .ui-datepicker table {
                    width: 278px;
                }

                    .ui-datepicker table td {
                        text-align: center;
                    }

                .ui-datepicker a {
                    cursor: pointer;
                    text-decoration: none;
                }

            .ui-datepicker-prev {
                float: left;
            }

            .ui-datepicker-next {
                float: right;
            }

            .ui-datepicker-title {
                text-align: center;
                font-weight: bold;
            }

            }
        </style>

        <div class="form-horizontal">
            <h4>Edit Mission Authorization</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.MissionID)
            @Html.HiddenFor(model => model.staffid)

            <table class=" table">
                <tr>
                    <td style=" border-right :none  "><h4>Mission Dates </h4></td>

                </tr>
                <tr>

                    @Html.HiddenFor(model => model.staffid)
                    @Html.ValidationMessageFor(model => model.staffid )
                    @Html.TextBoxFor(model => model.RDORDRDDate, new { @readonly = "readonly", @Value = ViewBag.RDORDRDDate, @class = "hidden" })
                    @Html.TextAreaFor(model => model.SignatureDate, new { @readonly = "readonly", @Value = ViewBag.SignatureDate, @class = "hidden" })
                   
                   
                    <th>
                        @Html.Label("From Date")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.FromDate)
                        @Html.DisplayFor(model => model.FromDate)
                        @*@Html.EditorFor(model => model.FromDate)*@
                        @*@Html.ValidationMessageFor(model => model.FromDate)*@
                    </td>

                    <th>
                        @Html.Label("To Date")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.ToDate)
                        @Html.DisplayFor(model => model.ToDate)
                        @*@Html.EditorFor(model => model.ToDate)*@
                        @*@Html.ValidationMessageFor(model => model.ToDate)*@
                    </td>

                   
                </tr>

                <tr>
                    <td style=" border-right:none "></td>

                </tr>


                <tr>
                    <td style=" border-right :none  ">
                        <h4>
                            Mission Information
                        </h4>
                    </td>

                </tr>


                <tr>

                    <th>
                        @Html.Label("Mission Itinerary")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.MissionItinerary)
                        @Html.DisplayFor(model => model.MissionItinerary)
                    </td>


                    <th>
                        @Html.Label("Funding")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.funding)
                        @Html.DisplayFor(model => model.funding)
                        @Html.ValidationMessageFor(model => model.funding)
                    </td>
                    <th>
                        @Html.Label("Mission Objective")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.MissionObjective)
                        @Html.DisplayFor(model => model.MissionObjective)
                        @Html.ValidationMessageFor(model => model.MissionObjective)
                    </td>

                <tr>
                    <td style=" border-right:none "></td>

                </tr>
                <tr>
                    <th>
                        @Html.Label("Expected Outputs")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.ExpectedOutputs)
                        @Html.DisplayFor(model => model.ExpectedOutputs)
                        @Html.ValidationMessageFor(model => model.ExpectedOutputs)
                    </td>
                    <th>
                        @Html.Label("Can This meeting Be Done Over Voice/Video ?")
                    </th>
                    <td>
                        @*@Html.CheckBoxFor(model => model.canbedone)*@
                        @Html.ValidationMessageFor(model => model.canbedone)
                        @Html.RadioButtonFor(model => model.canbedone, "False", new { disabled = "disabled" }) Yes <br>
                        @Html.RadioButtonFor(model => model.canbedone, "False", new { disabled = "disabled" }) No
                    </td>
                    <th>
                        @Html.Label("I had a discussion with my supervisor")
                    </th>
                    <td>

                        @Html.RadioButtonFor(model => model.ClearedBySupervisor, "False", new { disabled = "disabled" }) Yes <br>
                        @Html.RadioButtonFor(model => model.ClearedBySupervisor,"False", new {disabled = "disabled"}) No

                        @Html.ValidationMessageFor(model => model.ClearedBySupervisor)
                    </td>


                </tr>

                <tr>
                    <td style=" border-right:none "></td>

                </tr>
               


    @{
    var superid = Model.staff.staff_supervisorid.ToString();
    string param2 = this.Request.QueryString["loginid"];

    if (param2 == superid || param2 == null)
    {
        <tr>
            <td >
                <h4>
                    Cleared By Head of Unit
                </h4>
            </td>
            <td style=" border-right :none  ">
                @Html.DisplayFor(model => model.RDORDRDSignature, new { @readonly = "readonly", @Value = ViewBag.RDORDRDSignature})


            </td>

        </tr>
        
       // <tr>

           // <th>
              //  @Html.Label("Cleared By Head of Unit")
             //   @*@Html.TextBoxFor(model => model.RDORDRDDate, new { @readonly = "readonly", @Value = ViewBag.RDORDRDDate, @class = "hidden" })*@
              
          //  </th>
           // <td>
              //  @*@Html.DisplayFor(model => model.ClearedBySupervisor)
              //      @Html.ValidationMessageFor(model => model.ClearedBySupervisor)*@
             //   @Html.RadioButtonFor(model => model.ClearedBySupervisor, "True")

              //  Yes&nbsp; &nbsp;&nbsp; &nbsp;


              //  @Html.RadioButtonFor(model => model.ClearedBySupervisor, "False")
             //   @Html.ValidationMessageFor(model => model.ClearedBySupervisor)
             //   No
          //  </td>
       // </tr>

    }
    }

               
                <tr>
                    @{

    string param1 = this.Request.QueryString["drd"];

    if (param1 == "1")
    {
               
            <tr>
                <td style=" border-right :none  ">
                    <h4>
                        Head of Unit
                    </h4>
                </td>

            </tr>
                        <tr>
                            <th>
                                @Html.Label("Head of Unit")
                            </th>
                            <td>
                                @*@Html.DisplayFor(model => model.ClearedBySupervisor)
                        @Html.ValidationMessageFor(model => model.ClearedBySupervisor)*@
                                @Html.RadioButtonFor(model => model.RDORDRDSignature , "Yes")
                                @Html.ValidationMessageFor(model => model.RDORDRDSignature)

                                Approve&nbsp; &nbsp;&nbsp; &nbsp; <br>


                                @Html.RadioButtonFor(model => model.RDORDRDSignature , "NO")
                                @Html.ValidationMessageFor(model => model.RDORDRDSignature)
                                Reject
                                @Html.TextBoxFor(model => model.RDORDRDDate, new { @readonly = "readonly", @Value = DateTime.Now, @class = "hidden" })
              
                            </td>
                            <td style=" border-right :none  ">
                                  your Comment
                                
                           
                            
                                @Html.TextAreaFor(model => model.StaffSignature)   @*aprove/reject comment*@
                            </td>
                            @*<th>*@

                            @*@ViewBag.rdDrd

                        @Html.Label("RD/DRD Signature")
                    </th>
                    <td>
                        @Html.Display("RDDRDFalse")
                        @Html.EditorFor(model => model.RDORDRDSignature)*@
                            @*@Html.DisplayFor(model => model.RDORDRDSignature )*@
                            @*@Html.ValidationMessageFor(model => model.RDORDRDSignature)
                    </td>

                    <th>
                        @Html.Label(" Date")
                    </th>
                    <td>
                        @Html.JQueryUI().DatepickerFor(model => model.RDORDRDDate)*@
                            @*@Html.EditorFor(model => model.RDORDRDDate)*@
                            @*@Html.DisplayFor(model => model.RDORDRDDate )*@
                            @*@Html.ValidationMessageFor(model => model.RDORDRDDate)
                    </td>*@



                        </tr>
    }
                    }
                
                    
                <tr>
                    <td style=" border-right :none  ">
                        <h4>
                            Comment
                        </h4>
                    </td>

                </tr>
                <tr>
                    <th>
                        @Html.Label("Comment")
                    </th>
                    <td>
                        @Html.HiddenFor(model => model.FollowUp)
                        @Html.DisplayFor(model => model.FollowUp)
                        @Html.ValidationMessageFor(model => model.FollowUp)
                        @Html.TextBoxFor(model => model.RDORDRDDate, new { @readonly = "readonly", @Value = ViewBag.RDORDRDDate, @class = "hidden" })
                        @Html.TextBoxFor(model => model.RDORDRDSignature, new { @readonly = "readonly", @Value = ViewBag.RDORDRDSignature, @class = "hidden" })
                    </td>

                    </tr>

            

            </table>
            <table border="0" align="center">
                <tr>
                    <td>
                        <input type="submit" value="Save" class="btn btn-default" />
                    </td>
                    <td>
                        @Html.ActionLink("Back to List", "Index")
                    </td>
                </tr>
            </table>
            </div>
        </div>
        }



        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")

        }
