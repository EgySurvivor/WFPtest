@using Microsoft.AspNet.Identity
@*@if (!Request.IsAuthenticated)
{
    Response.Redirect("~/RBC-SMS/account/login");
}*@

@model PagedList.IPagedList<WFPtest.Models.MissionItinerary>



@*@model IEnumerable<WFPtest.Models.staff>*@
@*@using IEnumerable<wfptest.models.staff>;*@
@using WFPtest.Models


@using PagedList.Mvc;
@using JQueryUIHelpers;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}





@*@section scripts {
        <script language="javascript" type="text/javascript">

            $(function () {
                $('#tree1').tree({
                    closedIcon: $('<i class="fa fa-plus"></i>'),
                    openedIcon: $('<i class="fa fa-minus"></i>'),
                    dragAndDrop: false,
                    selectable: false
                });

                // bind 'tree.click' event
                $('#tree1').bind(
                    'tree.click',
                    function (event) {
                        // The clicked node is 'event.node'
                        var node = event.node;
                        console.log('clicked ' + node.name);
                    }
                );
            });

        </script>
    }*@
<br>

<p>
    <h2>Mission Authorization List</h2>
</p>

@*@using (Html.BeginForm())
    {
        <p>
            Find by name: @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
        </p>
    }*@

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" }))
{

    <br>
    <p>
        Find by From Date Or E-mail : @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />&nbsp;&nbsp;@Html.ActionLink("Reset Filter", "Index")
    </p>
}


@*<div id="tree1" data-url="/nodes/">
        @Html.Display("nnode")
    </div>*@

@*@Html.Partial("Simple")*@
@*@{Html.RenderPartial("Simple");}*@

@*<table border="0">
        <tr>
            <td>
                <p>
                    @Html.ActionLink("Submit Now", "Approval")
                </p>
            </td>
        </tr>
    </table>
    <br />*@




<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Description")
        </th>
        <th>
            @Html.DisplayName("From Date")
        </th>
        @*<th>
            @Html.DisplayName("To ID")
        </th>*@
        <th>
            @Html.DisplayName("To Date")
        </th>
        @*<th>
        @Html.DisplayNameFor(model => model.non1)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.non2)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.non3)
    </th>
    <th>
        @Html.DisplayNameFor(model => model.non4)
    </th>*@
    <th>
        @Html.DisplayName("From")
    </th>
    <th>
        @Html.DisplayName("TO")
    </th>
    <th>
        @Html.DisplayName("country3")
    </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FromDate)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.country1 .country_name)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.ToDate)
        </td>
        @*<td>
        @Html.DisplayFor(modelItem => item.non1)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.non2)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.non3)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.non4)
    </td>*@
    <td>
        @Html.DisplayFor(modelItem => item.country.country_name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.country1.country_name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MissionAuthorization.Mission_Type )
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
        <script src="~/Scripts/bootstrap.min.js"></script>

        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
            Launch demo modal
        </button>

        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("Create", "MissionItineraries", FormMethod.Post ))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Mission Itinerary</h4>
                                <hr />
                                @Html.ValidationSummary(true)
                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.MissionID, "MissionID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("MissionID", String.Empty)
                                        @Html.ValidationMessageFor(modelItem => item.MissionID)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Description")
                                        @Html.ValidationMessageFor(modelItem => item.Description)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.FromID, "FromID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("FromID", String.Empty)
                                        @Html.ValidationMessageFor(modelItem => item.FromID)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.ToID, "ToID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ToID", String.Empty)
                                        @Html.ValidationMessageFor(modelItem => item.ToID)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("FromDate")
                                        @Html.ValidationMessageFor(modelItem => item.FromDate)
                                    </div>
                                </div>




                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.ToID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ToID)
                                        @Html.ValidationMessageFor(model => model.ToID)
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(modelItem => item.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("ToDate")
                                        @Html.ValidationMessageFor(modelItem => item.ToDate)
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.non1, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.non1)
                                        @Html.ValidationMessageFor(model => model.non1)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.non2, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.non2)
                                        @Html.ValidationMessageFor(model => model.non2)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.non3, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.non3)
                                        @Html.ValidationMessageFor(model => model.non3)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.non4, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.non4)
                                        @Html.ValidationMessageFor(model => model.non4)
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>

                    </div>
                    <div class="modal-footer">
                        @*<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <input type="reset" value="Submit" class="btn btn-success" id="btnSubmit" />*@
                    </div>
                </div>
            </div>
        </div>

    </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>

    
}

</table>
<br />
<table border="0">
    <tr>
        <td>
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </td>
    </tr>
</table>
<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<script>

    $(document).ready(function () {


        $("#btnSubmit").click(function () {

            $("#loaderDiv").show();

            var myformdata = $("#myForm").serialize();

            $.ajax({

                type: "POST",
                url: "/MissionItineraries/Create",
                data: myformdata,
                success: function () {
                    $("#loaderDiv").hide();
                    $("#myModal").modal("hide");

                }

            })
        })

    })


</script>

